// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipalPortalBackend.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MunicipalPortalBackend.Migrations
{
    [DbContext(typeof(MunicipalPortalBackendContext))]
    [Migration("20231114155430_Fundamental")]
    partial class Fundamental
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MunicipalPortalBackend.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("MunicipalBranchId")
                        .HasColumnType("integer");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MunicipalBranchId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.ApplicationComplaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.ToTable("ApplicationComplaint");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.MunicipalDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MunicipalDepartment");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.MunicipalDepartmentReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MunicipalDepartmentId")
                        .HasColumnType("integer");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalDepartmentId");

                    b.ToTable("MunicipalDepartmentReview");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Application", b =>
                {
                    b.HasOne("MunicipalPortalBackend.Models.Category", "Category")
                        .WithMany("Applications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MunicipalPortalBackend.Models.MunicipalDepartment", "MunicipalBranch")
                        .WithMany("Applications")
                        .HasForeignKey("MunicipalBranchId");

                    b.Navigation("Category");

                    b.Navigation("MunicipalBranch");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.ApplicationComplaint", b =>
                {
                    b.HasOne("MunicipalPortalBackend.Models.Application", "Application")
                        .WithOne("ApplicationComplaint")
                        .HasForeignKey("MunicipalPortalBackend.Models.ApplicationComplaint", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.MunicipalDepartmentReview", b =>
                {
                    b.HasOne("MunicipalPortalBackend.Models.MunicipalDepartment", "MunicipalDepartment")
                        .WithMany("DepartmentReviews")
                        .HasForeignKey("MunicipalDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MunicipalDepartment");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Picture", b =>
                {
                    b.HasOne("MunicipalPortalBackend.Models.Application", null)
                        .WithMany("Pictures")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Application", b =>
                {
                    b.Navigation("ApplicationComplaint");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.Category", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("MunicipalPortalBackend.Models.MunicipalDepartment", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("DepartmentReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
